import figma, { html } from '@figma/code-connect/html';
import sybmolList from '../../stories/atoms/symbol-list.json';

/**
 * -- This file was auto-generated by `figma connect create` --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect('<FIGMA_BUTTONS_BUTTONS>', {
  props: {
    label: figma.string('Label'),
    showIcon: figma.boolean('Show Icon'),
    icon: figma.nestedProps('Icon', {
      name: figma.enum('Name', {
        '3d Rotation': '3d-rotation',
        Accessibility: 'accessibility',
        Accessible: 'accessible',
        'Accessible Forward': 'accessible-forward',
        'Account Box': 'account-box',
        'Account Child': 'account-child',
        'Account Child Invert': 'account-child-invert',
        'Account Circle': 'account-circle',
        'Accessibility New': 'accessibility-new',
      }),
    }),
    rank: figma.enum('Rank', {
      Primary: 'primary',
      Secondary: 'secondary',
      Success: 'success',
      Danger: 'danger',
      Warning: 'warning',
      Info: 'info',
      Light: 'light',
      Dark: 'dark',
      Link: 'link',
      'Outline Primary': 'outline-primary',
      'Outline Secondary': 'outline-secondary',
      'Outline Success': 'outline-success',
      'Outline Info': 'outline-info',
      'Outline Warning': 'outline-warning',
      'Outline Danger': 'outline-danger',
      'Outline Light': 'outline-light',
      'Outline Dark': 'outline-dark',
    }),
    size: figma.enum('Size', {
      Default: 'default',
      Small: 'small',
      Large: 'large',
    }),
    state: figma.enum('State', {
      Default: 'default',
      Disabled: 'disabled',
    }),
  },
  example: (props) => html`<button
    bs-button
    label=${props.label}
    rank=${props.rank}
    size=${props.size}
    icon=${props.icon.name}
  ></button>`,
});
