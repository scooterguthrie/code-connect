{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9cad793c9054785e9fa8f5cd8d6b67b53f629af28067a564e914f54865bfd59f2bd3497175b050d420ad4886166c5836dbb798652b17dc360a6142256f4a9723",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'code-connect'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n//import { RouterOutlet } from '@angular/router';\nimport { ButtonComponent } from '../components/molecules/button/button.component';\nimport { IconComponent } from '../components/atoms/icon/icon.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [ButtonComponent, IconComponent ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'code-connect';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container-xxl\">\n  <h1>Storybook Code Connect Test</h1>\n  <h2>Icon Component</h2>\n  <ul class=\"list-unstyled\">\n    <li><icon name=\"account_box\" size=\"sm\" /> Small</li>\n    <li><icon name=\"account_box\" />Default</li>\n    <li><icon name=\"account_box\" size=\"lg\" />Large</li>\n  </ul>\n  <h2>Button Component</h2>\n  <div class=\"d-grid gap-3 d-md-flex\">\n    <button\n      bs-button\n      label=\"Component Button 01\"\n      icon=\"account_box\"\n    ></button>\n    <button bs-button label=\"Component Button 02\"></button>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-db572dbffb26c2ed5e51a261cc0c58ceaf13295979164b7f777014727a904f36b39cc890648297a1ada44cb123c8a1561b2d8e016ed4d33bdda1e8070abc7eec",
            "file": "src/components/molecules/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[bs-button], a[bs-button]",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "null | \"3d_rotation\" | \"accessibility\" | \"accessible\" | \"accessible_forward\" | \"account_box\" | \"account_child\" | \"account_child_invert\" | \"account_circle\" | \"accessibility_new\"",
                    "decorators": []
                },
                {
                    "name": "iconOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inProgress",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rank",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\" | \"outline-primary\" | \"outline-secondary\" | \"outline-success\" | \"outline-info\" | \"outline-warning\" | \"outline-anger\" | \"outline-light\" | \"outline-dark\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "\"default\" | \"sm\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IconComponent } from '../../atoms/icon/icon.component';\n//import { MaterialSymbol } from 'material-symbols';\n\n@Component({\n  selector: 'button[bs-button], a[bs-button]',\n  standalone: true,\n  imports: [CommonModule, IconComponent],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss',\n  host: {\n    '[class]': 'classes',\n    '[type]': 'type',\n    '[attr.aria-disabled]': 'disabled || inProgress',\n  },\n})\nexport class ButtonComponent {\n  @Input() label = 'Button';\n  @Input() rank?:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'light'\n    | 'dark'\n    | 'link' \n    | 'outline-primary'\n    | 'outline-secondary'\n    | 'outline-success'\n    | 'outline-info'\n    | 'outline-warning'\n    | 'outline-anger'\n    | 'outline-light'\n    | 'outline-dark' = 'primary';\n  @Input() type?: 'button' | 'submit' | 'reset' = 'button';\n  @Input() size: 'default' | 'sm' | 'lg' = 'default';\n  //@Input() icon: MaterialSymbol | null = null;\n  @Input() icon: null | '3d_rotation' | 'accessibility' | 'accessible' | 'accessible_forward' | 'account_box' | 'account_child' | 'account_child_invert' | 'account_circle' | 'accessibility_new' = null;\n  @Input() iconOnly? = false;\n  @Input() inProgress? = false;\n  @Input() disabled? = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    let disabledString = '';\n    if (this.disabled || this.inProgress) {\n      disabledString = 'disabled';\n    }\n    return [\n      'btn',\n      `btn-${this.rank}`,\n      `btn-${this.size}`,\n      `${disabledString}`,\n    ];\n  }\n}\n",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            },
            "templateData": "@if(inProgress){<span\n  class=\"spinner-border spinner-border-sm\"\n  role=\"status\"\n  aria-hidden=\"true\"\n></span\n>} @if (icon !== null){\n<icon [name]=\"icon\" [size]=\"size\"></icon>\n}\n<span class=\"btn-label\" [ngClass]=\"{ 'visually-hidden': iconOnly }\">{{\n  label\n}}</span>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-8e8d0746b4e662b5aeb7164b4e819881bfc8b244d5e33f6637c9223ff1edf162d0fd66ce13e771bc6c4f6ded178f1cfaa5890fa727f5c8e97868d050853702ef",
            "file": "src/components/atoms/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "name",
                    "defaultValue": "'account_box'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"3d_rotation\" | \"accessibility\" | \"accessible\" | \"accessible_forward\" | \"account_box\" | \"account_child\" | \"account_child_invert\" | \"account_circle\" | \"accessibility_new\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"default\" | \"sm\" | \"lg\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n//import type { MaterialSymbol } from 'material-symbols';\n\n@Component({\n  selector: 'icon',\n  imports: [CommonModule],\n  standalone: true,\n  templateUrl: './icon.component.html',\n  styleUrl: './icon.component.scss',\n  host: {\n    class: 'material-symbols-rounded',\n    '[class]': 'classes',\n    '[attr.aria-hidden]': 'true',\n  },\n})\nexport class IconComponent {\n  //@Input() name: MaterialSymbol = 'add_circle';\n  @Input() name: '3d_rotation' | 'accessibility' | 'accessible' | 'accessible_forward' | 'account_box' | 'account_child' | 'account_child_invert' | 'account_circle' | 'accessibility_new' = 'account_box';\n  @Input() size: 'default' | 'sm' | 'lg' = 'default';\n\n  public get classes(): string[] {\n    return ['material-symbols-rounded', `icon-${this.size}`,]\n  }\n}\n",
            "styleUrl": "./icon.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 22
                    }
                }
            },
            "templateData": "{{name}}"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/atoms/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/molecules/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            }
        ]
    }
}