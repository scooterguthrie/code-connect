{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ce372096a10aa119f1d024e15e9ccfba7fe50ecf96df9e9bfb52054e7d1ee843ba577d67276791a183247114e5d0c20af33f209efa1f61b96255449a6674eb6e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'code-connect'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n//import { RouterOutlet } from '@angular/router';\r\nimport { ButtonComponent } from '../components/molecules/button/button.component';\r\nimport { IconComponent } from '../components/atoms/icon/icon.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [ButtonComponent, IconComponent ],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'code-connect';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container-xxl\">\r\n  <h1>Storybook Code Connect Test</h1>\r\n  <h2>Icon Component</h2>\r\n  <ul class=\"list-unstyled\">\r\n    <li><icon name=\"search\" size=\"sm\" /> Small</li>\r\n    <li><icon name=\"search\" />Default</li>\r\n    <li><icon name=\"search\" size=\"lg\" />Large</li>\r\n  </ul>\r\n  <h2>Button Component</h2>\r\n  <div class=\"d-grid gap-3 d-md-flex\">\r\n    <button\r\n      bs-button\r\n      label=\"Component Button 01\"\r\n      icon=\"add\"\r\n    ></button>\r\n    <button bs-button label=\"Component Button 02\"></button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e8ad963fd4d85e6afb27a5fac14eb88b3719a97361bbb1ec490039cbf02e80fbc8a0575eec296970ddfafac819212212d427de5cf150cc18c1637132c2be76d5",
            "file": "src/components/molecules/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[bs-button], a[bs-button]",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "MaterialSymbol | null",
                    "decorators": []
                },
                {
                    "name": "iconOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inProgress",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rank",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"default\" | \"sm\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IconComponent } from '../../atoms/icon/icon.component';\r\nimport { MaterialSymbol } from 'material-symbols';\r\n\r\n@Component({\r\n  selector: 'button[bs-button], a[bs-button]',\r\n  standalone: true,\r\n  imports: [CommonModule, IconComponent],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.scss',\r\n  host: {\r\n    '[class]': 'classes',\r\n    '[type]': 'type',\r\n    '[attr.aria-disabled]': 'disabled || inProgress',\r\n  },\r\n})\r\nexport class ButtonComponent {\r\n  @Input() label = 'Button';\r\n  @Input() rank?:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'success'\r\n    | 'danger'\r\n    | 'warning'\r\n    | 'info'\r\n    | 'light'\r\n    | 'dark'\r\n    | 'link' = 'primary';\r\n  @Input() outline? = false;\r\n  @Input() type?: 'button' | 'submit' | 'reset' = 'button';\r\n  @Input() size: 'default' | 'sm' | 'lg' = 'default';\r\n  @Input() icon: MaterialSymbol | null = null;\r\n  @Input() iconOnly? = false;\r\n  @Input() inProgress? = false;\r\n  @Input() disabled? = false;\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    let outlineString = '';\r\n    let disabledString = '';\r\n    if (this.outline) {\r\n      outlineString = 'outline-';\r\n    }\r\n    if (this.disabled || this.inProgress) {\r\n      disabledString = 'disabled';\r\n    }\r\n    return [\r\n      'btn',\r\n      `btn-` + `${outlineString}` + `${this.rank}`,\r\n      `btn-${this.size}`,\r\n      `${disabledString}`,\r\n    ];\r\n  }\r\n}\r\n",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 40
                    }
                }
            },
            "templateData": "@if(inProgress){<span\r\n  class=\"spinner-border spinner-border-sm\"\r\n  role=\"status\"\r\n  aria-hidden=\"true\"\r\n></span\r\n>} @if (icon !== null){\r\n<icon [name]=\"icon\" [size]=\"size\"></icon>\r\n}\r\n<span class=\"btn-label\" [ngClass]=\"{ 'visually-hidden': iconOnly }\">{{ label }}</span>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-fc6bacfc665993d5f326bc749655ed4be1d12d542cb1af44181d64798a7c185ca60f0b8c59547f203a337b31be38fcbca92649fc45ef6f53fc00c3f08b35adde",
            "file": "src/components/atoms/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "name",
                    "defaultValue": "'add_circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "MaterialSymbol",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"default\" | \"sm\" | \"lg\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport type { MaterialSymbol } from 'material-symbols';\r\n\r\n@Component({\r\n  selector: 'icon',\r\n  imports: [CommonModule],\r\n  standalone: true,\r\n  templateUrl: './icon.component.html',\r\n  styleUrl: './icon.component.scss',\r\n  host: {\r\n    class: 'material-symbols-rounded',\r\n    '[class]': 'classes',\r\n    '[attr.aria-hidden]': 'true',\r\n  },\r\n})\r\nexport class IconComponent {\r\n  @Input() name: MaterialSymbol = 'add_circle';\r\n  @Input() size: 'default' | 'sm' | 'lg' = 'default';\r\n\r\n  public get classes(): string[] {\r\n    return ['material-symbols-rounded', `icon-${this.size}`,]\r\n  }\r\n}\r\n",
            "styleUrl": "./icon.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 21
                    }
                }
            },
            "templateData": "{{name}}"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/atoms/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/molecules/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            }
        ]
    }
}